name: Build & Deploy to EKS

on:
  push:
    branches: [ main ]

env:
  IMAGE_TAG: latest

jobs:
  build-backend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        run: aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin ${{ secrets.ECR_REGISTRY }}

      - name: Build and push backend image
        run: |
          docker build -t ${{ secrets.ECR_REGISTRY }}/backend:${{ env.IMAGE_TAG }} ./backend
          docker push ${{ secrets.ECR_REGISTRY }}/backend:${{ env.IMAGE_TAG }}

  build-frontend:
    runs-on: ubuntu-latest
    needs: build-backend
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        run: aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin ${{ secrets.ECR_REGISTRY }}

      - name: Build and push frontend image
        run: |
          docker build -t ${{ secrets.ECR_REGISTRY }}/frontend:${{ env.IMAGE_TAG }} ./frontend
          docker push ${{ secrets.ECR_REGISTRY }}/frontend:${{ env.IMAGE_TAG }}

  deploy:
    runs-on: ubuntu-latest
    needs: [build-backend, build-frontend]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Decode and configure KUBECONFIG
        run: |
          echo "${{ secrets.KUBECONFIG_B64 }}" | base64 --decode > kubeconfig
          export KUBECONFIG=$PWD/kubeconfig

      - name: Setup kubectl
        uses: azure/setup-kubectl@v3

      - name: Apply Kubernetes manifests
        run: kubectl apply -f k8s/

