name: CI/CD for Login App

on:
  push:
    branches:
      - aws-deploy

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Build Frontend Docker Image
        run: |
          docker build -t frontend ./frontend
          docker save frontend -o frontend.tar

      - name: Build Backend Docker Image
        run: |
          docker build -t backend ./backend
          docker save backend -o backend.tar

      - name: Upload Docker Images as Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: docker-images
          path: |
            frontend.tar
            backend.tar

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      # Example test â€” replace with actual test framework
      - name: Run Backend Tests
        run: |
          echo "Running backend tests"
          cd backend
          npm install
          npm test || echo "No tests found"

      - name: Run Frontend Tests
        run: |
          echo "Running frontend tests"
          cd frontend
          npm install
          npm run test || echo "No tests found"

  push:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Download Docker Images from Artifact
        uses: actions/download-artifact@v4
        with:
          name: docker-images

      - name: Load Docker Images
        run: |
          docker load -i frontend.tar
          docker load -i backend.tar

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Tag and Push Frontend Image
        run: |
          docker tag frontend ${{ secrets.ECR_REGISTRY }}/frontend:latest
          docker push ${{ secrets.ECR_REGISTRY }}/frontend:latest

      - name: Tag and Push Backend Image
        run: |
          docker tag backend ${{ secrets.ECR_REGISTRY }}/backend:latest
          docker push ${{ secrets.ECR_REGISTRY }}/backend:latest

  deploy:
    runs-on: ubuntu-latest
    needs: push
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Set up kubectl
        run: |
          echo "${{ secrets.KUBECONFIG_B64 }}" | base64 --decode > kubeconfig
          export KUBECONFIG=$PWD/kubeconfig
          kubectl get nodes

      - name: Deploy to EKS
        run: |
          export KUBECONFIG=$PWD/kubeconfig
          kubectl apply -f k8s/
