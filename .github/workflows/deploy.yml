name: CI/CD Pipeline â€“ Build, Test, Push & Deploy

on:
  push:
    branches:
      - main  # Change to your default branch if needed

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }}
  EKS_CLUSTER_NAME: ${{ secrets.EKS_CLUSTER_NAME }}

jobs:
  build:
    name: Build Docker Images
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Build Frontend Docker Image
        run: docker build -t frontend:latest ./frontend

      - name: Build Backend Docker Image
        run: docker build -t backend:latest ./backend

  test:
    name: Run App Tests
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Test Frontend (React)
        run: |
          cd frontend
          npm install
          npm test || echo "Frontend tests failed but continuing..."

      - name: Test Backend (Node.js)
        run: |
          cd backend
          npm install
          npm test || echo "Backend tests failed but continuing..."

  push:
    name: Push Docker Images to ECR
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build & Push Frontend Image
        run: |
          docker build -t $ECR_REGISTRY/frontend:latest ./frontend
          docker push $ECR_REGISTRY/frontend:latest

      - name: Build & Push Backend Image
        run: |
          docker build -t $ECR_REGISTRY/backend:latest ./backend
          docker push $ECR_REGISTRY/backend:latest

  deploy:
    name: Deploy to Amazon EKS
    runs-on: ubuntu-latest
    needs: push

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Decode kubeconfig and set up kubectl
        run: |
          echo "${{ secrets.KUBECONFIG_B64 }}" | base64 --decode > kubeconfig
          export KUBECONFIG=$PWD/kubeconfig
          kubectl config use-context arn:aws:eks:${{ secrets.AWS_REGION }}:$(aws sts get-caller-identity --query Account --output text):cluster/${{ secrets.EKS_CLUSTER_NAME }}

      - name: Deploy Kubernetes manifests
        run: |
          kubectl apply -f k8s/
