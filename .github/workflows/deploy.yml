name: CI/CD to AWS EKS

on:
  push:
    branches:
      - aws-deploy

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }}
  EKS_CLUSTER_NAME: ${{ secrets.EKS_CLUSTER_NAME }}

jobs:
  build:
    name: Build Docker Images
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Build Frontend
        run: docker build -t frontend ./frontend

      - name: Build Backend
        run: docker build -t backend ./backend

  test:
    name: Test Applications
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      # Example test steps
      - name: Run Backend Unit Tests
        working-directory: ./backend
        run: echo "No backend tests defined yet"

      - name: Run Frontend Lint/Build Test
        working-directory: ./frontend
        run: echo "No frontend tests defined yet"

  push:
    name: Push Docker Images to ECR
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build and Tag Frontend Image
        run: |
          docker build -t $ECR_REGISTRY/frontend:latest ./frontend
          docker push $ECR_REGISTRY/frontend:latest

      - name: Build and Tag Backend Image
        run: |
          docker build -t $ECR_REGISTRY/backend:latest ./backend
          docker push $ECR_REGISTRY/backend:latest

  deploy:
    name: Deploy to EKS
    runs-on: ubuntu-latest
    needs: push

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Decode kubeconfig
        run: echo "${{ secrets.KUBECONFIG_B64 }}" | base64 -d > kubeconfig

      - name: Set up kubectl
        run: |
          mkdir -p $HOME/.kube
          mv kubeconfig $HOME/.kube/config

      - name: Deploy to EKS
        run: |
          kubectl apply -f k8s/mongo.yaml
          kubectl apply -f k8s/backend.yaml
          kubectl apply -f k8s/frontend.yaml
